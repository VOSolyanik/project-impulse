.modal {
  transform: translateY(10%);
}

/*   Open state of the dialog  */
.modal[open] {
  opacity: 1;
  transform: translateY(0px);
}

/*   Closed state of the dialog   */
.modal {
  opacity: 0;
  transform: scaleY(0);
  transition: opacity var(--transition-duration) var(--transition-function),
    transform var(--transition-duration) var(--transition-function),
    overlay var(--transition-duration) var(--transition-function) allow-discrete,
    display var(--transition-duration) var(--transition-function) allow-discrete;
}

/*   Before-open state  */
/* Needs to be after the previous dialog[open] rule to take effect,
    as the specificity is the same */
@starting-style {
  .modal[open] {
    opacity: 0;
    transform: translateY(10%);
  }
}

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
.modal::backdrop {
  background-color: rgb(0 0 0 / 0%);
  transition: display var(--transition-duration) allow-discrete,
    overlay var(--transition-duration) allow-discrete,
    background-color var(--transition-duration);
}

.modal[open]::backdrop {
  background-color: rgb(0 0 0 / 25%);
}

/* This starting-style rule cannot be nested inside the above selector
because the nesting selector cannot represent pseudo-elements. */

@starting-style {
  .modal[open]::backdrop {
    background-color: rgb(0 0 0 / 0%);
  }
}
