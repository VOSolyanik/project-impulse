import{E as h,g as x,f as a,a as v,b as g,c as m}from"./assets/main-CIzW2f7T.js";/* empty css                      */import"./assets/vendor-4jich7g5.js";class u extends h{constructor(e,s,r="No favorite exercises found"){super(e,!0,r),this.containerElement=e,this.ids=s,this.allItems=[],s.length&&this.loadData()}setFavoriteIds(e){this.ids=e;const s=new Set(e),r=this.allItems.filter(d=>s.has(d._id));this.render(r)}async loadData(){try{const e=await x({page:1,limit:999999});this.allItems=e.results,this.setFavoriteIds(this.ids)}catch(e){console.error("Error loading data:",e)}}}const E=`It appears that you haven't added any exercises to your favorites yet.
To get started, you can add exercises that you like to your favorites for easier access in the future.`,n=document.querySelector(".exercise-cards-list");n.classList.add("custom-scroll-bar");const o=new u(n,a.gerFavorites(),E),i=new v("#exercise-modal-content"),c=new g("#exercise-rating-content");o.onExerciseDelete(t=>{a.removeFavorite(t),o.setFavoriteIds(a.gerFavorites())});const l=async t=>{i.show(t),i.onRatingOpen(e=>{c.show(e),c.onDialogClose(()=>{l(t)})})};o.onExerciseSelect(async t=>{const e=await m(t);l(e)});i.onFavoriteToggle(()=>{o.setFavoriteIds(a.gerFavorites())});
//# sourceMappingURL=favorites.js.map
